#
# Copyright (c) 2020-2021 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

name: Release Che Plugin Registry

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'release version in format 7.y.z'
        required: true
  push:
    branches: 
      - 'release'
    paths:
      - 'VERSION'

jobs:
  release-build-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Clone source code
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      
      - name: Prepare
        id: prep
        run: |
          SHORT_SHA1=$(git rev-parse --short HEAD)
          echo ::set-output name=short_sha1::${SHORT_SHA1}
          VERSION=$(head -n 1 VERSION)
          echo ::set-output name=version::${VERSION}
          PLATFORMS=$(cat PLATFORMS)
          echo ::set-output name=platforms::${PLATFORMS}
          IMAGE=che-plugin-registry
          echo ::set-output name=image::${IMAGE}
      
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v1
      
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1
      
      - name: Login to quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
     
      - name: Login to docker.io
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Generating output-folder using yarn
        run: |
          echo "Update yarn dependencies..."
          yarn
          echo "Build tooling..."
          yarn --cwd "$(pwd)/tools/build" build
          echo "Generate artifacts..."
          eval node "${NODE_BUILD_OPTIONS}" tools/build/lib/entrypoint.js --output-folder:"$(pwd)/output" ${BUILD_FLAGS}
      
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"  
      - uses: actions/cache@v2
        name: Cache yarn dependencies
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/cache@v2
        name: Cache vsix dependencies
        id: download-unpacked-cache
        with:
          path: | 
            /tmp/che-plugin-registry/download-folder
            /tmp/che-plugin-registry/unpack-folder
          key: download-unpacked-cache-${{ hashFiles('**/che-theia-plugins.yaml') }}
          restore-keys: |
            download-unpacked-cache-
      
      - name: "Build and push"
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/dockerfiles/Dockerfile
          platforms: ${{  steps.prep.outputs.platforms }}
          tags: quay.io/eclipse/${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.version }},quay.io/eclipse/${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.short_sha1 }}
          push: true 
